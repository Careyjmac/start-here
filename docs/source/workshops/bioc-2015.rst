BioC 2015: Where Software and Biology Connect
=============================================

Google has some pretty amazing big data computational "hammers" that they have been applying to search and video data for a long time.  In this workshop we take those same hammers and apply them to whole genome sequences.

We will work with both the :doc:`/use_cases/discover_public_data/1000_genomes` reads and variants and also the :doc:`/use_cases/discover_public_data/platinum_genomes` gVCF variants.

We do this all from the comfort of the R prompt using common packages including `VariantAnnotation`_, `ggbio`_, `ggplot2`_, `dplyr`_, `bigrquery`_, and the new Bioconductor package `GoogleGenomics`_ which provides an R interface to Google's implementation of the `Global Alliance for Genomics and Health API`_.

And we'll do this in a reproducible fashion running RMarkdown files via `Dockerized Bioconductor`_ running on `Google Compute Engine`_ VMs!

.. contents::

Get Started with Google Cloud Platform
--------------------------------------

Create a Google Cloud Platform project
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. include:: /includes/gcp_signup.rst

Enable APIs
^^^^^^^^^^^

Enable all the Google Cloud Platform APIs we will use in this workshop by clicking on this `link <https://console.developers.google.com/flows/enableapi?apiid=genomics,bigquery,dataflow,compute_component,storage_component,storage_api,logging,pubsub,datastore>`_.

Download client_secrets.json
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

.. container:: toggle

    .. container:: header

        There are a few steps to do this.  Click here to **Show/Hide Instructions**

    .. container:: content

      .. include:: /includes/get_client_secrets.rst

Install gcloud
^^^^^^^^^^^^^^

.. include:: /includes/gcloud_setup.rst

Configure gcloud compute
^^^^^^^^^^^^^^^^^^^^^^^^

.. container:: toggle

    .. container:: header

        There are a few steps to do this.  Click here to **Show/Hide Instructions**

    .. container:: content

      .. include:: /includes/gcloud_compute_configure.rst

Spin up a Google Compute Engine Instance running Bioconductor
-------------------------------------------------------------

This codelab can be run from anywhere.  All the heavy lifting is happening in the cloud regardless of where R is running.  But if you like, you can run the whole darn thing in the cloud.

Bioconductor maintains Docker images with R, Bioconductor packages, and RStudio Server all ready to go!  Its a great way to set up your R environment quickly and start working.  The instructions follow but if you want to learn more, see http://www.bioconductor.org/help/docker/.

.. include:: /includes/r_workbench_setup.rst

You now have access to RStudio via your browser!  (If you prefer to run locally instead, see the codelab `R prerequisites <https://github.com/googlegenomics/codelabs/tree/master/R>`_.)

.. container:: toggle

    .. container:: header

        For more information: **Show/Hide Details**

    .. container:: content

      .. include:: /includes/r_workbench_details.rst

Run the "Data Analysis using Google Genomics" Codelab
------------------------------------------------------

In `Data Analysis using Google Genomics`_ we perform PCA, BigQuery, and GWAS analyses to identify variants of interest within :doc:`/use_cases/discover_public_data/1000_genomes` and then explore those reads and variants using Bioconductor.

(1) Clone the Google Genomics codelab repository.  From the RStudio *Main Menu*:

  File -> New Project -> Version Control -> Git

  Repository URL
    https://github.com/googlegenomics/codelabs.git

  The default value is fine for the other fields.  Click on the "Create Project" button

(2) Open the codelab RMarkdown file.  From the RStudio *Files Pane*:

  R -> 1000Genomes-BRCA1-analysis

  Open AllModalitiesDemo.Rmd

(3) Set your current working directory.  From the RStudio *Files Pane*:

  More -> Set As Working Directory

(4) Start running `AllModalitiesDemo.Rmd <https://github.com/googlegenomics/codelabs/blob/master/R/1000Genomes-BRCA1-analysis/AllModalitiesDemo.Rmd>`_ line by line or chunk by chunk!

  You can view the rendered analysis here `AllModalitiesDemo.md <https://github.com/googlegenomics/codelabs/blob/master/R/1000Genomes-BRCA1-analysis/AllModalitiesDemo.md>`_.

Run the "Quality Control using Google Genomics" Codelab
--------------------------------------------------------

In `Quality Control using Google Genomics`_ we perform common quality control checks such as singleton rate, transition/transversion rate, and Hardy-Weinberg Equilibrium on the :doc:`/use_cases/discover_public_data/platinum_genomes` gVCF variants.

(1) Open the first codelab RMarkdown file.  From the RStudio *Files Pane*:

  R -> PlatinumGenomes-QC

  Open Data-Overview.Rmd

(2) Set your current working directory.  From the RStudio *Files Pane*:

  More -> Set As Working Directory

(3) Start running `Data-Overview.Rmd <https://github.com/googlegenomics/codelabs/blob/master/R/PlatinumGenomes-QC/Data-Overview.Rmd>`_ line by line or chunk by chunk!

  You can view the rendered analysis here `Data-Overview.md <https://github.com/googlegenomics/codelabs/blob/master/R/PlatinumGenomes-QC/Data-Overview.md>`_.

(4) There are three more parts to this codelab:

  * `Part 2: Data Transformation <https://github.com/googlegenomics/codelabs/blob/master/R/PlatinumGenomes-QC/Data-Transformation.md>`_ just skim this - we use Dataflow to make the equivalent of a multi-sample VCF)
  * `Part 3: Sample-Level QC <https://github.com/googlegenomics/codelabs/blob/master/R/PlatinumGenomes-QC/Sample-Level-QC.Rmd>`_
  * `Part 4: Variant-Level QC <https://github.com/googlegenomics/codelabs/blob/master/R/PlatinumGenomes-QC/Variant-Level-QC.md>`_

Wrap up
-------------

TODO: more here

* see other published data
* pointers to run spark/dataflow jobs
* pointers to more BigQuery examples
* "stop" your VM
* collaborate on GA4GH specification
* collaborate on https://github.com/Bioconductor/GoogleGenomics
